#!/bin/sh
#
############################################################################
#
# MODULE:       	r.villages
# AUTHOR(S):		Isaac Ullah, Michael Barton, Arizona State University
# PURPOSE:		patches a map of village locations on a landcover landcover map 
# ACKNOWLEDGEMENTS:	National Science Foundation Grant #BCS0410269 
# COPYRIGHT:		(C) 2007 by Isaac Ullah, Michael Barton, Arizona State University
#			This program is free software under the GNU General Public
#			License (>=v2). Read the file COPYING that comes with GRASS
#			for details.
#
#############################################################################


#%Module
#%  description: patches a map of village locations on a landcover landcover map
#%END

#%option
#% key: inmap
#% type: string
#% gisprompt: old,cell,raster
#% description: input landcover map (integer values aligned with reclass rules)
#% required : yes
#%END

#%option
#% key: villages
#% type: string
#% gisprompt: old,cell,raster
#% description: input map of village locations (coded as all one integer value)
#% required : yes
#%END

#%option
#% key: val
#% type: integer
#% answer: 40
#% description: value for villages to be coded onto output map
#% required : yes
#%END

#%option
#% key: prfx
#% type: string
#% gisprompt: string
#% description: prefix for output map (will be put before 'final_landcover')
#% answer: year1
#% required : yes
#%END





if  [ -z "$GISBASE" ] ; then
 echo "You must be in GRASS GIS to run this program." >&2
 exit 1
fi

if [ "$1" != "@ARGS_PARSED@" ] ; then
  exec g.parser "$0" "$@"
fi



#setting up variables for use later on

inmap=$GIS_OPT_inmap

villages=$GIS_OPT_villages

val=$GIS_OPT_val

prfx=$GIS_OPT_prfx

outmap=$prfx"final_landcover"


temp_villages=$prfx"_temporary_village_reclass"


#setting initial conditions of map area

g.region rast=$inmap

r.mask --quiet input=$inmap maskcats=*

#discovering the value of the input villages map

inval=`eval r.cats map=$villages`

#setting up color and reclass rules

colors="$val red"

reclass="$inval = $val Village"
	
#doing reclass and recolor

	cat $reclass | r.reclass input=$villages output=$temp_villages

	cat $colors | r.colors map=$temp_villages color=rules

#patching maps together

r.patch -q input=$temp_villages,$inmap output=$outmap


echo ""
echo "*************************"
echo "      Cleaning up"
echo "*************************"
echo ""


g.remove --quiet rast=MASK,$temp_villages



echo ""
echo "DONE!"
echo ""
echo ""

