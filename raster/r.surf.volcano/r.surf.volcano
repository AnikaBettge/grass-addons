#!/bin/sh
############################################################################
#
# MODULE:       r.surf.volcano
# AUTHOR:       M. Hamish Bowman, Dept. Marine Science, University of Otago
#			Dunedin, New Zealand
# PURPOSE:      Create an artificial surface resembling a seamount or cone volcano
#
# COPYRIGHT:    (c) 2009 Hamish Bowman, and the GRASS Development Team
#               This program is free software under the GNU General Public
#               License (>=v2). Read the file COPYING that comes with GRASS
#               for details.
#
#		This program is distributed in the hope that it will be useful,
#		but WITHOUT ANY WARRANTY; without even the implied warranty of
#		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#		GNU General Public License for more details.
#
#############################################################################

#%Module
#% description: Creates an artificial surface resembling a seamount or cone volcano.
#% keywords: raster
#%End
#%Option
#% key: output
#% type: string
#% required: yes
#% key_desc: name
#% description: Name for output raster map
#% gisprompt: new,cell,raster
#%End
#%Option
#% key: peak
#% type: double
#% required: no
#% description: Height of cone
#% answer: 1000.0
#%End
#%Option
#% key: crater
#% type: double
#% required: no
#% description: Depth of crater below the cone (bigger means wider)
#% answer: 0.0
#%End
#%Option
#% key: friction
#% type: integer
#% required: no
#% options: 1-25
#% description: Friction of distance, (the 'n' in 1/d^n)
#% answer: 6
#%End
#%Option
#% key: sigma
#% type: double
#% required: no
#% description: Surface roughness factor
#% answer: 1.0
#%End
#%Flag
#% key: r
#% description: Roughen the surface
#%End

## TODO
##%Flag
##% key: n
##% description: Use (d^n)*log(d) instead of 1/(d^n) for radial basis function
##%End

if [ -z "$GISBASE" ] ; then
    echo "You must be in GRASS GIS to run this program." 1>&2
    exit 1
fi

if [ "$1" != "@ARGS_PARSED@" ] ; then
    exec g.parser "$0" "$@"
fi

FRICTION="$GIS_OPT_FRICTION"
PEAK="$GIS_OPT_PEAK"
CRATER="$GIS_OPT_CRATER"
SIGMA="$GIS_OPT_SIGMA"


# test for overwrite as r.mapcalc doesn't
eval `g.findfile element=cell file="$GIS_OPT_OUTPUT" mapset=.`
if [ -n "$name" ] ; then
   # map already exists
   if [ -z "$GRASS_OVERWRITE" ] || [ "$GRASS_OVERWRITE" -ne 1 ] ; then
      g.message -e "option <output>: <$GIS_OPT_OUTPUT> exists."
      exit 1
   fi
fi


g.message -v "Finding cost from center of current region ..."
eval `g.region -gc`
r.mapcalc "volc.dist_units.$$ = \
   sqrt( (x() - $center_easting)^2 + (y() - $center_northing)^2 )"


g.message -v "Normalizing cost map with 1 in the center and 0 at outer edge ..."
eval `r.info -r "volc.dist_units.$$"`
r.mapcalc "volc.dist_norm.$$ = ($max - volc.dist_units.$$) / $max"


g.message -v "Creating IDW surface ..."
r.mapcalc "volc.peak.$$ = ($PEAK + abs($CRATER) ) \
	* pow( volc.dist_norm.$$, $FRICTION )"


if [ "$GIS_FLAG_R" -eq 0 ] ; then
   g.rename rast="volc.peak.$$,volc.surf.$$" --quiet
else
   # roughen it up a bit
   g.message -v "Creating random Gaussian mottle ..."
   r.surf.gauss out="volc.surf_gauss.$$" sigma="$SIGMA"

   g.message -v "Applying Gaussian mottle ..."
   r.mapcalc "volc.peak_rough.$$ = \
	volc.peak.$$ + (volc.surf_gauss.$$ * $PEAK/400 )"

   g.rename rast="volc.peak_rough.$$,volc.surf.$$" --quiet
   g.remove rast="volc.surf_gauss.$$,volc.peak.$$" --quiet

fi

g.remove rast="volc.dist_units.$$,volc.dist_norm.$$" --quiet

if [ "$CRATER" == "0.0" ] ; then
   g.rename rast="volc.surf.$$,$GIS_OPT_OUTPUT" --quiet
else
   g.message -v "Creating crater ..."
   r.mapcalc "volc.full.$$ = if( volc.surf.$$ > $PEAK, \
	2*$PEAK - volc.surf.$$, volc.surf.$$ )"

   g.rename rast="volc.full.$$,$GIS_OPT_OUTPUT" --quiet
   g.remove rast="volc.surf.$$" --quiet
fi


# test if it worked
eval `g.findfile element=cell file="$GIS_OPT_OUTPUT" mapset=.`
if [ -z "$name" ] ; then
   g.message -e "Surface creation failed"
   exit 1
fi

# write metadata
r.support map="$GIS_OPT_OUTPUT" \
    description="generated by r.surf.volcano" \
    source1="Peak height = $PEAK" \
    source2="Friction of distance = $FRICTION" \
    title="Artificial surface resembling a seamount or cone volcano"

if [ "$GIS_FLAG_R" -eq 1 ] ; then
   r.support map="$GIS_OPT_OUTPUT" \
     history="Surface roughness used a Gaussian deviate with sigma of $SIGMA."
fi

g.message -v "Done."

exit
