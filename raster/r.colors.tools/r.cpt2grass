#!/bin/sh

############################################################################
#
# MODULE:       r.cpt2grass
# AUTHOR(S):    M. Hamish Bowman, Otago University, New Zealand
# PURPOSE:      Convert a GMT color table into a GRASS color rules file
# COPYRIGHT:    (c) 2007 by Hamish Bowman, and the GRASS Development Team
#
#               This program is free software under the GNU General Public
#               License (>=v2). Read the file COPYING that comes with GRASS
#               for details.
#
# SEE ALSO:     GMT: The Generic Mapping Tools 
#                 http://gmt.soest.hawaii.edu
#		  http://gmt.soest.hawaii.edu/gmt/doc/html/GMT_Docs/node61.html
#
# REQUIRES:	awk
#############################################################################

#%Module
#% description: Convert or apply a GMT color table to a GRASS raster map
#%End
#%option
#% key: input
#% gisprompt: old_file,file,file
#% type: string
#% description: Name of input GMT color table (.cpt file)
#% required : yes
#%END
#%option
#% key: map
#% gisprompt: old,cell,raster
#% type: string
#% description: Raster map to apply it to
#% required : no
#%END
#%option
#% key: output
#% gisprompt: new_file,file,file
#% type: string
#% description: Name for new rules file, or "-" for stdout
#% required : no
#%END
#%flag
#% key: s
#% description: Stretch color scale to match map data extent
#%end


if [ -z "$GISBASE" ] ; then
    echo "You must be in GRASS GIS to run this program." 1>&2
    exit 1
fi

if [ "$1" != "@ARGS_PARSED@" ] ; then
    exec g.parser "$0" "$@"
fi

if [ -z "$GIS_OPT_MAP" ] && [ -z "$GIS_OPT_OUTPUT" ] ; then
    echo "ERROR: Nothing to do, please select either the map or output option" 1>&2
    exit 1
fi

if [ ! -e "$GIS_OPT_INPUT" ] ; then
    echo "ERROR: Input file [$GIS_OPT_INPUT] not found." 1>&2
    exit 1
fi

if [ `grep 'COLOR_MODEL' "$GIS_OPT_INPUT" | cut -f2 -d= | grep -c 'HSV\|CMYK'` -gt 0 ] ; then
    echo "ERROR: Only the RGB color model is supported" 1>&2
    exit 1
fi


# check if we have awk
AWK=`which awk`
if [ "$AWK" = "" ] ; then
    echo "ERROR: awk required, please install awk/gawk first" 1>&2
    exit 1
fi

# setting environment, so that awk works properly in all languages
unset LC_ALL
export LC_NUMERIC=C

TMP="`g.tempfile pid=$$`"
if [ $? -ne 0 ] || [ -z "${TMP}" ] ; then
    echo "ERROR: Unable to create temporary files" 1>&2
    exit 1
fi



# B background is for values less than the first color rule, F foreground is for greater.
#  in GRASS we just consider that to be null, although we could define a color rule
#  max<->near infinity to be solidly that color. ??
# skip labels for now

echo "# GMT color map created with r.cpt2grass" > "$TMP"
echo "#  from [$GIS_OPT_INPUT] by $USER at `date`" >> "$TMP"
grep '^#' "$GIS_OPT_INPUT" >> "$TMP"

# null value color
grep '^N' "$GIS_OPT_INPUT" | \
  awk '{printf("nv %d:%d:%d\n", $2, $3, $4)}' >> "$TMP"


# do it in an awk script:
#if ^#, print
#if 8 nums
#if N nv

if [ $GIS_FLAG_S -eq 0 ] ; then
  # the data
  grep '^[0-9.-]' "$GIS_OPT_INPUT" | \
    awk '{printf("%s %d:%d:%d\n%s %d:%d:%d\n", $1, $2, $3, $4, $5, $6, $7, $8)}' >> "$TMP"
else
  # strech to fit data

  CPT_MIN=`grep -v '^[#FBN]' "$GIS_OPT_INPUT" | awk '{print $1}' | sort -n | head -n 1`
  CPT_MAX=`grep -v '^[#FBN]' "$GIS_OPT_INPUT" | awk '{print $5}' | sort -n | tail -n 1`

#  N_RULE_ROWS=`grep -cv '^[#FBN]' "$GIS_OPT_INPUT"`
#  N_RULES=`echo "$N_RULE_ROWS" | awk '{print $1 + 1}'`

  RANGE=`echo "$CPT_MIN $CPT_MAX" | awk '{print $2 - $1}'`  

# DEBUG:
#echo "RANGE=$RANGE   Cmin=$CPT_MIN  Cmax=$CPT_MAX"

  while read LINE ; do
     unset LINE_MIN LINE_MAX PERCENT_MIN PERCENT_MAX
     if [ `echo "$LINE" | grep -c '^[#FBN]'` -ne 0 ] ; then
       continue
     fi

     LINE_MIN=`echo "$LINE" | awk '{print $1}'`
     LINE_MAX=`echo "$LINE" | awk '{print $5}'`

     PERCENT_MIN=`echo "$LINE_MIN" | awk -v RANGE="$RANGE" -v CMAX="$CPT_MAX" \
        '{print 100 * (RANGE - (CMAX - $1)) / RANGE }'`
     PERCENT_MAX=`echo "$LINE_MAX" | awk -v RANGE="$RANGE" -v CMAX="$CPT_MAX" \
        '{print 100 * (RANGE - (CMAX - $1)) / RANGE }'`

     echo "$LINE" | awk -v PMIN="$PERCENT_MIN" -v PMAX="$PERCENT_MAX" \
        '{printf("%s%% %d:%d:%d\n%s%% %d:%d:%d\n", PMIN, $2, $3, $4, PMAX, $6, $7, $8)}' >> "$TMP"

# DEBUG:
#echo "LINE: [$LINE]"
#echo "  lmin=$LINE_MIN  lmax=$LINE_MAX  pmin=$PERCENT_MIN  pmax=$PERCENT_MAX "

  done < "$GIS_OPT_INPUT"
fi

uniq "$TMP" "${TMP}.u"

if [ -n "$GIS_OPT_MAP" ] ; then
   if [ `echo "$GRASS_VERSION" | cut -f1,2 -d.` = "6.2" ] ; then
     # 6.2's rules= doesn't take a filename
     r.colors map="$GIS_OPT_MAP" color=rules < "${TMP}.u"
   else
     # assume 6.3 or newer
     r.colors map="$GIS_OPT_MAP" rules="${TMP}.u"
   fi
fi

if [ -n "$GIS_OPT_OUTPUT" ] ; then
   if [ "$GIS_OPT_OUTPUT" = "-" ] ; then
      cat "${TMP}.u"
   else
      cp "${TMP}.u" "$GIS_OPT_OUTPUT"
   fi
fi

\rm "$TMP" "${TMP}.u"
